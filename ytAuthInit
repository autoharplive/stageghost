#!/usr/bin/perl
# Crude initial user auth sequence - present 
# link to url that will prompt for OAuth approval
# Docs: Instructions for "Server-Side" style user auth flow from
# https://developers.google.com/youtube/v3/live/guides/auth/server-side-web-apps

# Example: 
# https://accounts.google.com/o/oauth2/auth?client_id=XXXXXXXXXXXXXXXXXXXXXXXX.apps.googleusercontent.com&redirect_uri=http%3A%2F%2Flocalhost%2Foauth2callback&scope=https://www.googleapis.com/auth/youtube&response_type=code&access_type=offline`

# Simple, cheap, safe config file reader
# Example use:
#   $Config{'DuckVolume'} = fnConfigGet ("dronetv.duckvolume");
# -----------------------------------------------------
sub fnConfigGet {
  my $argFieldName = shift (@_)
    or return;
  open (IN, "<config/$argFieldName")
    or return;
  my $in = <IN>; chomp ($in);
  close (IN);
  return ($in);
}

# Settings
my $APIClientID = fnConfigGet("dronetv.youtubeclientid");
my $APIResponseType = "code";                # See docs
my $APIAccessType = "offline";
my $CallbackURL = "http://192.168.1.2:8000/cgi-bin/oauth2callback";

# Approval URL Template, pre-encoded
my $AuthURLTemplate = "https://accounts.google.com/o/oauth2/auth?"
  . "client_id=$APIClientID"
  . "&redirect_uri=$CallbackURL"
  . "&device_id=1001"
  . "&device_name=stageghost"
  # . "&redirect_uri=http://192.168.1.2:8000/cgi-bin/oauth2callback"
  . "&scope=https://www.googleapis.com/auth/youtube"
  . "&response_type=$APIResponseType"
  . "&access_type=$APIAccessType";

# Send user to URL, callbackurl handles the rest
print ($AuthURLTemplate);
print ("\n");
