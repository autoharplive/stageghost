#!/usr/bin/perl
# Update config/dronetv.youtubeoauthtoken, using the 
# dronetv.youtuberefreshtoken, client id and client secret
# Note dronetv.youtuberefreshtoken created by cgi-bin/oauth2callback !
# Note: Should be called about 3600 second intervals actual time
# is given in json response but so far that's what I usually see -dmm

# Simple, cheap, safe config file reader
#   $Config{'DuckVolume'} = fnConfigGet ("dronetv.duckvolume");
# -----------------------------------------------------
sub fnConfigGet {
  my $argFieldName = shift (@_) or return;
  open (IN, "<config/$argFieldName") or return;
  my @in = <IN>;        # Slurp all
  close (IN);
  $out = join ("\n", @in);
  $out =~ s/^#.*\n*$//gmo;
  $out =~ s/^\s*$//gmo;
  $out =~ s/\n|\r//gmo;
  return ($out);
}

# These tokens read from config, used in refresh request
# Note dronetv.youtuberefreshtoken created by cgi-bin/oauth2callback !
my $ClientID = fnConfigGet ("dronetv.youtubeclientid");
my $ClientSecret = fnConfigGet ("dronetv.youtubeclientsecret");
my $RefreshToken = fnConfigGet ("dronetv.youtuberefreshtoken");
# The refreshed user oauth tokens go here:
my $TokenFile = "config/dronetv.youtubeoauthtoken";
my $JSONFile = "config/dronetv.youtubeoauthtoken.json"; # Disused as yet

# New: Abort if unconfigured or impossibly small
if (length($ClientID . $ClientSecret . $RefreshToken) < 49) {
  die ("\n$0 Fatal: config/dronetv.youtubeclientid, youtuberefreshtoken and/or clientsecret are foobar\n");
}

# Weird note: My call is using a nonsense redirect_uri (which we ignore)
$Raw = `/usr/bin/curl --silent -X POST -d "refresh_token=$RefreshToken" --data-urlencode "client_id=$ClientID" --data-urlencode "client_secret=$ClientSecret" --data-urlencode "redirect_uri=http://localhost/oauth2callback" --data-urlencode "grant_type=refresh_token" https://accounts.google.com/o/oauth2/token`;

# Complete response for later tools
open (OUT, "> config/dronetv.youtubeoauthtoken.json") or die ("\n$0 : $! \n");
print (OUT $Raw);
close (OUT);

# Complete response for existing tools
print ($Raw);

# Just the token for simple tools
$Raw =~ s/\"//g;
$Raw =~ s/\s+//g;
$Raw =~ s/^.*access_token\://;
$Raw =~ s/\,.*//g;
 
# Update production youtubeoauthtoken!
open (OUT, "> $TokenFile") or die ("\n$0 : $! \n");
print (OUT $Raw);
close (OUT);

# Fin
